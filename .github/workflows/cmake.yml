name: CMake
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    env:
      # Set your boost version
      BOOST_VERSION: 1.78.0
      # Set you boost path to the default one (I don't know if you can use variables here)
    steps:
    - name: Download SDL2
      # You may pin to the exact commit or the version.
      # uses: albin-johansson/download-sdl2@d4e9339339b31b200ada5c7530d5eadad01576c2
      uses: albin-johansson/download-sdl2@v2
      id: install-sdl2
      with:
        # Where the SDL2 sources will be saved
         sources_destination: ${{github.workspace}}
        # Where the SDL2 runtime binaries will be saved
         binaries_destination: ${{github.workspace}}
    - name: Download SDL2_image
      # You may pin to the exact commit or the version.
      # uses: albin-johansson/download-sdl2-image@4351247ed4fa2a10344d76071bd2567e2ca56c98
      uses: albin-johansson/download-sdl2-image@v2
      with:
        # Where the SDL2_image sources will be saved
         sources_destination: ${{github.workspace}}
        # Where the SDL2_image runtime binaries will be saved
         binaries_destination: ${{github.workspace}}

        
    - name: Download Flex/Bison
      shell: powershell
      run: Invoke-WebRequest -Uri "http://gigenet.dl.sourceforge.net/project/winflexbison/win_flex_bison3-latest.zip" `
                                  -OutFile ${{github.workspace}}/bison.zip
            
    - name: Install Flex/Bison
      shell: cmd
      run: |
        cd ${{github.workspace}}
        mkdir flex
        7z x -y bison.zip -oflex
        del bison.zip
        D:/a/engine-sim/engine-sim/flex/win_flex.exe --version
        D:/a/engine-sim/engine-sim/flex/win_bison.exe --version


    - name: Checking out Submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
      
    - name: Install Boost
      uses: NexusXe/install-boost@v2.3.2
      id: install-boost
      with:
        boost_version: 1.78.0
        platform_version: 2022
        toolset: msvc
        arch: aarch64
        
    
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake .. -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64 -DSDL2_PATH=${{github.workspace}}/SDL2-2.0.16/ -DSDL2_INCLUDE_DIR=${{github.workspace}}/SDL2-2.0.16/include -DSDL2_LIBRARY=${{github.workspace}}/SDL2-2.0.16/lib/x64/SDL2.lib -DSDL2MAIN_LIBRARY=${{github.workspace}}/SDL2-2.0.16/lib/x64/SDL2main.lib -DSDL2_IMAGE_LIBRARY=${{github.workspace}}/SDL2_image-2.0.5/lib/x64/SDL2_image.lib -DSDL2_IMAGE_INCLUDE_DIR=${{github.workspace}}/SDL2_image-2.0.5/include -DPIRANHA_ENABLED=True -DFLEX_EXECUTABLE=${{github.workspace}}\flex\win_flex.exe -DFLEX_INCLUDE_DIR=${{github.workspace}}\flex -DBISON_EXECUTABLE=${{github.workspace}}\flex\win_bison.exe
      env:
         BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
         SDL2_INCLUDE_DIR: ${{github.workspace}}/SDL2-2.0.16/include
         SDL2_LIBRARY: ${{github.workspace}}/SDL2-2.0.16/lib/x64/SDL2.lib
         SDL2MAIN_LIBRARY: ${{github.workspace}}/SDL2-2.0.16/lib/x64/SDL2main.lib
         SDL2_IMAGE_INCLUDE_DIR: ${{github.workspace}}/SDL2_image-2.0.5/include
         SDL2_IMAGE_LIBRARY: ${{github.workspace}}/SDL2_image-2.0.5/lib/x64/SDL2_image.lib
         PIRANHA_ENABLED: true
         FLEX_EXECUTABLE: ${{github.workspace}}\flex\win_flex.exe
         FLEX_INCLUDE_DIR: ${{github.workspace}}\flex
         BISON_EXECUTABLE: ${{github.workspace}}\flex\win_bison.exe
         

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config Release -- /m

